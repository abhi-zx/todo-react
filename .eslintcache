[{"C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\index.js":"1","C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\App.js":"2","C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Context\\AppContext.jsx":"3","C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Components\\Hashtag.jsx":"4","C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Components\\TodoInput.jsx":"5","C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Components\\TodoList.jsx":"6","C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Components\\Navs\\NavBar.jsx":"7","C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Components\\TodoItem.jsx":"8"},{"size":290,"mtime":1644733497947,"results":"9","hashOfConfig":"10"},{"size":401,"mtime":1644733497916,"results":"11","hashOfConfig":"10"},{"size":2420,"mtime":1644733498207,"results":"12","hashOfConfig":"10"},{"size":1918,"mtime":1644733498015,"results":"13","hashOfConfig":"10"},{"size":1635,"mtime":1644733498075,"results":"14","hashOfConfig":"10"},{"size":2373,"mtime":1644733498137,"results":"15","hashOfConfig":"10"},{"size":1036,"mtime":1644733992450,"results":"16","hashOfConfig":"10"},{"size":2584,"mtime":1644733498106,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1quv2a4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\index.js",[],["39","40"],"C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\App.js",[],"C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Context\\AppContext.jsx",["41"],"import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const AppContext = React.createContext();\nclass AppContextProvider extends React.Component {\n  constructor(props) {\n    super(props);\n    var data1 = localStorage.getItem(\"todolist\")\n    var fromHash = localStorage.getItem(\"hashtag\")\n\n    this.state = {\n      todo: JSON.parse(data1) || [],\n      hashtag: [],\n      set: [],\n      hashSet: JSON.parse(fromHash) || []\n    };\n  }\n\n  updateTodo = todo => {\n    this.setState({ todo });\n  };\n\n  updateLocalStorage = todoList => {\n    localStorage.setItem(\"todolist\", JSON.stringify(todoList));\n  };\n\n  // add todo list\n  addTodo = (title) => {\n\n    var hash = title.split(\" \").filter((v) => v.startsWith(\"#\"))\n    let item = {\n      title,\n      id: uuid(),\n      status: false,\n      tHash:hash\n\n    };\n    const {hashSet} = this.state\n  \n    console.log(hash)\n    this.setState({\n      todo: [...this.state.todo, item],\n      hashSet: [...hashSet,...hash]\n    });\n    console.log(\"lop\" , this.state.hashSet)\n    var hasgData = [...hashSet, ...hash]\n    var hashTo = localStorage.setItem(\"hashtag\", JSON.stringify(hasgData))\n    // var fromHash = JSON.parse(localStorage.getItem(\"hashtag\"))\n\n\n    var data = [...this.state.todo, item]\n    localStorage.setItem(\"todolist\", JSON.stringify(data))\n\n  };\n\n  // delete the selective todo list\n  removeTodo = (id) => {\n    let newData = this.state.todo.filter((item) => item.id !== id);\n    this.updateLocalStorage(newData);\n    this.updateTodo(newData);\n\n  };\n\n  // this function will toggle the todo ? completed : not completed\n  toggleTask = (id) => {\n    let newData = this.state.todo.map((item) =>\n      item.id === id ? { ...item, status: !item.status } : item\n    );\n    this.updateLocalStorage(newData);\n    this.updateTodo(newData);\n  };\n\n  // this function will update the task\n  updateTask = (id, payload) => {\n    let newData = this.state.todo.map((item) =>\n      item.id === id ? { ...payload } : item\n    );\n    this.updateLocalStorage(newData);\n    this.updateTodo(newData);\n  };\n  render() {\n    const { todo,hashSet } = this.state;\n    const { addTodo, removeTodo, toggleTask, updateTask } = this;\n    const value = { todo, addTodo, removeTodo, toggleTask, updateTask ,hashSet };\n    return (\n      <AppContext.Provider value={value}>\n        {this.props.children}\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default AppContextProvider;\n","C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Components\\Hashtag.jsx",["42","43","44"],"import React, { Component } from 'react'\nimport \"./Todo.css\"\nimport { AppContext } from \"../Context/AppContext\";\n\nclass HashtagView extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hasht: \"\"\n        }\n    }\n\n    allStorage = () => {\n\n        var values = [],\n            keys = Object.keys(localStorage),\n            i = keys.length;\n\n        while (i--) {\n            values.push(localStorage.getItem(keys[i]));\n        }\n\n        return values;\n    }\n\n    showHashTags = (hash) => {\n        this.setState({\n            hasht: hash\n        })\n        console.log(hash)\n    }\n\n    render() {\n        const { todo, hashSet } = this.context\n        const { hasht } = this.state\n        // console.log(todo)\n        return (\n            <div>\n                <h6>#hashtags</h6>\n                <div>\n                    {hashSet && hashSet.filter(function (item, pos) {\n                        return hashSet.indexOf(item) == pos;\n                    }).map((item) => {\n                        return (\n                            <button key={item} onClick={() => this.showHashTags(item)} className=\"btnhash\" >{item}</button>\n                        )\n                    })}\n                </div>\n                <div>\n                    {todo && todo.map((match) => match.tHash.map((show2) => {\n                        if (show2 == hasht) {\n                            console.log(match.title, 'dcfds')\n                            return (\n                                <div style={{ backgroundColor: \"white\" }} key={match.id}>\n                                    <li style={{ alignText: \"left\" }}>{match.title}</li>\n                                </div>\n                            )\n                        }\n                    }))}\n                </div>\n            </div>\n        )\n    }\n}\n\nHashtagView.contextType = AppContext;\nexport default HashtagView","C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Components\\TodoInput.jsx",["45"],"import React from \"react\";\nimport { Typography, TextField } from '@material-ui/core';\nimport { AppContext } from \"../Context/AppContext\";\nimport \"../styles.css\"\n\nclass TodoInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      hashtag: \"\"\n    };\n  }\n\n  onHashChange = (e) => {\n    this.setState({\n      hashtag: e.target.value\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n  render() {\n    const { addTodo } = this.context;\n    const { text, hashtag } = this.state;\n    return (\n      <div className=\"TodoList\">\n        <div>\n          <label>\n            <Typography style={{ marginTop: \"25px\", color: \"white\" }} variant=\"h4\">Todo Web App</Typography>\n            <br />\n            {/* <form > */}\n              {/* <TextField\n                id=\"outlined-basic\" label=\"Add Hashtag..\" variant=\"outlined\"\n                value={hashtag}\n                onChange={this.onHashChange}\n                required={true}\n              /> */}\n\n\n              <TextField\n                id=\"outlined-basic\" label=\"Add Todo..\" variant=\"outlined\"\n                value={text}\n                onChange={this.onChange}\n                required={true}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                    return addTodo(text)\n                  }\n                }}\n              />\n            {/* </form> */}\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoInput.contextType = AppContext;\nexport default TodoInput\n\n\n// hashtah : [ #work:[{},{},{},{}] , #gym:[{},{},{},{}]  ]","C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Components\\TodoList.jsx",[],"C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Components\\Navs\\NavBar.jsx",[],"C:\\Users\\Abhi\\Desktop\\todo\\Ofline-Todo-App-main\\src\\Components\\TodoItem.jsx",["46"],"import React from \"react\";\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport \"../styles.css\"\nimport \"./Todo.css\"\nimport { TextField ,Typography} from '@material-ui/core';\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEdit: false,\n      value: {\n        ...props.item\n      }\n    };\n  }\n  toggleEdit = () => {\n    this.setState({\n      isEdit: !this.state.isEdit\n    });\n  };\n  handleEdit = (e) => {\n    let { name, value: val, type, checked } = e.target;\n    val = type === \"checkbox\" ? checked : val;\n    const { value } = this.state;\n    this.setState({\n      value: { ...value, [name]: val }\n    });\n  };\n  handleUpdate = () => {\n    const { value } = this.state;\n    this.props.update(value.id, value);\n    this.toggleEdit();\n  };\n  render() {\n    const { item, onToggle, onRemove } = this.props;\n    // manage the state locally\n    const { title, status, id,hashtag } = item;\n    const { isEdit, value } = this.state;\n    // ifEdit\n    // return ( <input  )\n    if (isEdit) {\n      return (\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <TextField\n            style={{ flex: 1 }}\n            onChange={this.handleEdit}\n            name=\"title\"\n            value={value.title}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter') {\n                return (this.handleUpdate())\n              }\n            }}\n          />\n          <IconButton onClick={this.toggleEdit} aria-label=\"delete\" size=\"medium\">\n            <CancelIcon size=\"medium\" color=\"primary\" />\n          </IconButton>\n        </div>\n      );\n    }\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"row\" }} className=\"completedListItem\">\n         {/* <Typography align=\"right\"></Typography> */}\n        <div onClick={() => onToggle(id)} className={status ? \"done\" : \"notdone\"} style={{ flex: 1, \n          textDecoration: \"line-trough\" }}>{title} {hashtag}\n          \n          </div>\n          <br/>\n         \n       \n        <IconButton onClick={() => onRemove(id)} aria-label=\"delete\" size=\"medium\">\n          <DeleteIcon size=\"medium\" color=\"primary\" />\n        </IconButton>\n        {\n          !status && <IconButton onClick={this.toggleEdit} aria-label=\"delete\" size=\"medium\">\n            <EditIcon size=\"medium\" color=\"primary\" />\n          </IconButton>\n        }\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":47,"column":9,"nodeType":"53","messageId":"54","endLine":47,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":42,"column":54,"nodeType":"57","messageId":"58","endLine":42,"endColumn":56},{"ruleId":"59","severity":1,"message":"60","line":50,"column":74,"nodeType":"61","messageId":"62","endLine":50,"endColumn":76},{"ruleId":"55","severity":1,"message":"56","line":51,"column":35,"nodeType":"57","messageId":"58","endLine":51,"endColumn":37},{"ruleId":"51","severity":1,"message":"63","line":28,"column":19,"nodeType":"53","messageId":"54","endLine":28,"endColumn":26},{"ruleId":"51","severity":1,"message":"64","line":8,"column":21,"nodeType":"53","messageId":"54","endLine":8,"endColumn":31},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'hashTo' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'hashtag' is assigned a value but never used.","'Typography' is defined but never used.","no-global-assign","no-unsafe-negation"]